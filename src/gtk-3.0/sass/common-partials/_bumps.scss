headerbar, headerbar.titlebar {
  entry {
    background-color: if($headerbar != "dark", $lighter_bg_color, $darker_lighter_bg_color);
    color: if($headerbar == "dark", $light_fg_color, $fg_color);
  }

  button {
    // make the styling on headerbar buttons more discreet
    margin: 5px 0;
    background-color: transparent;
    border-color: transparent;
    box-shadow: none;
    color: if($headerbar == "dark", $light_fg_color, $fg_color);

    &.text-button {
      &:hover {
        background-color: if($headerbar != "dark", $lighter_bg_color, $darker_lighter_bg_color);
        color: $primary_color;
        border-color: $primary_color;
      }

      &:active {
        background-color: $pressed_fg;

        image, label, arrow {
          color: white;
        }

        &, &.image-button.popup.toggle {
          &:checked {
            image, label, arrow {
              color: white;
            }
          }
        }
      }

      &.text-button.image-button.popup.toggle {
        &:checked {
          image, label, arrow {
            color: white;
          }
        }
      }

      &.suggested-action, &.default.suggested-action {
        @include button(normal, $suggested_color);

        &:hover {
          @include button(hover, $suggested_color);

          image, label, arrow {
            color: white;
          }
        }

        &:active {
          @include button(active, $suggested_color);

          image, label, arrow {
            color: white;
          }
        }

        &:checked {
          @include button(checked, $suggested_color);
        }

        &:disabled {
          @include button(insensitive);
        }
      }
    }

    &.image-button:not(.text-button) {
      &, &.toggle, &.popup, &.popup.toggle {
        &, &:hover, &:active, &:checked, &:disabled, &:checked:hover {
          @include button(flat);
        }

        &:hover, &:checked {
          label, image, arrow {
            color: $primary_color;
          }
        }

        &:active, &:checked:hover {
          background-image: image(if($headerbar == "dark", $darker_headerbar_color, $headerbar_bg));
          border-color: if($headerbar == "dark", $darker_headerbar_color, $headerbar_bg);

          label, image, arrow {
            color: $pressed_fg;
          }
        }

        &:disabled {
          color: if($headerbar == "dark", $darker_disabled_fg_color, $disabled_fg_color);
        }
      }
    }

    &.toggle:not(.image-button):not(.text-button) {
      // undercover flat buttons (rhythmbox with alternative toolbar plugin)
      @include button(flat);
    }

    &:hover, &:checked {
      label, image, arrow {
        color: $primary_color;
      }
    }

    &:active, &:checked:hover {
      label, image, arrow {
        color: $pressed_fg;
      }
    }

    &:disabled {
      color: if($headerbar == "dark", $darker_disabled_fg_color, $disabled_fg_color);
    }
  }

  stackswitcher.horizontal.linked.stack-switcher {
    // make the stackswitcher look the way we want it to look

    button.image-button.radio {
      &:checked {
        background-color: $lighter_bg_color;
        border-color: $primary_color;
      }
    }

    button {
      background-color: if($headerbar != "dark", $lighter_bg_color, $darker_lighter_bg_color);
      color: if($headerbar == "dark", $darker_disabled_fg_color, $disabled_fg_color);
      min-width: 115px;
      border-radius: 0px;
      border: 0px;
      box-shadow: none;
      transition: $button_transition;

      &.text-button, &.radio {
        &:hover, &:checked {
          label, image, arrow {
            color: $primary_color;
          }

          background-color: if($headerbar != "dark", $lighter_bg_color, $darker_lighter_bg_color);
          transition: $button_transition;
        }

        &:checked {
          box-shadow: $shadow_bottom $primary_color;

          &:disabled {
            label, image, arrow {
              color: $fg_color;
            }

            box-shadow: $shadow_bottom if($headerbar == "dark", $darker_disabled_fg_color, $disabled_fg_color);
          }
        }

        &:not(:checked) {
          &:hover {
            label, image, arrow {
              color: if($headerbar == "dark", $darker_disabled_fg_color, $disabled_fg_color);
            }

            box-shadow: $shadow_bottom if($headerbar == "dark", $darker_disabled_fg_color, $disabled_fg_color);
          }

          &:active {
            label, image, arrow {
              color: $pressed_fg;
            }

            box-shadow: $shadow_bottom $primary_color;
          }
        }

        &:disabled {
          label, image, arrow {
            color: if($headerbar == "dark", $darker_disabled_fg_color, $disabled_fg_color);
          }

          background-color: if($headerbar == "dark", $darker_disabled_fg_color, $disabled_fg_color);
        }
      }

      &:first-child {
        border-top-left-radius: $standard_radius;
      }

      &:last-child {
        border-top-right-radius: $standard_radius;
      }
    }
  }

  .path-bar button.slider-button {
    // give the appearance of the pathbar being one big box
    &, &:disabled {
      background-color: if($headerbar == "dark" and $variant == "light", $darker_lighter_bg_color, $lighter_bg_color);
    }

    &:disabled {
      label, image, arrow {
        color: $disabled_fg_color;
      }
    }
  }
}

.nautilus-window notebook header tabs tab {
  min-height: 32px;
}

button {
  // get rid of the orange background when the toggle is checked but disabled
  .text-button.toggle {
    &:checked:disabled {
      background-image: image($disabled_bg_color);
      color: $disabled_fg_color;
      border-color: transparentize($primary_color, $disabled_opacity);
    }
  }

  .image-button:not(.text-button) {
    // get rid of headerbar image buttons having a background even when disabled
    &:disabled {
      background-image: none;
      background-color: transparent;
    }
  }
}

stackswitcher button {
  border-color: $border_color;
  border-style: solid;

  &:first-child {
    border-width: 1px 0 1px 1px;
  }

  &:last-child {
    border-width: 1px 1px 1px 0px;
  }

  &:not(:last-child):not(:first-child) {
    border-width: 1px 0px 1px 0px;
  }
}

scale:disabled contents {
  // disabled state for scale
  background-color: darken($bg_color, 5%);
}

dialog {
  @if $headerbar != "dark" {
    background-image: image($headerbar_bg);
  }
}

messagedialog {
  // Flat dialog boxes
  border-radius: 0px;
  border-width: 0px 1px 1px 1px;

  &.background.csd, box.dialog-vbox.horizontal, buttonbox.dialog-action-area.horizontal.linked, box.horizontal.titlebar {
    border-radius: 0px;
    border-style: solid;
    border-color: if($variant != "dark", #E6E6E6, #2D2D2D);
  }

  .titlebar {
    border-width: 1px 1px 0 1px;
  }

  &.background.csd {
    &, box.horizontal:last-child, decoration {
      box-shadow: none;
    }

    buttonbox.linked {
      border-width: 0 1px 1px 1px;
    }
  }

  button {
    // doesn't seem to inherit default button padding
    min-height: 36px;

    &:hover {
      border-color: $border_color;
      background-color: $primary_color;

      label, image, arrow {
        color: white;
      }
    }

    &:active {
      border-color: $border_color;
      background-color: $pressed_fg;

      label, image, arrow {
        color: white;
      }
    }
  }

  &.background.csd box.horizontal.titlebar {
    // get rid of the dialog box's forehead
    min-height: 24px;
    background-image: image($bg_color);
    padding: 0px;
  }
}

popover.menu {
  button {
    &:hover {
      box-shadow: none;
      border-color: transparent;
    }
  }
}
